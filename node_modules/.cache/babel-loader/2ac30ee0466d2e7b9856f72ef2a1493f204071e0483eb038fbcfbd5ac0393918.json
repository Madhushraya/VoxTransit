{"ast":null,"code":"var _jsxFileName = \"/Users/madhushraya/Desktop/apps/vbtes/src/Components/AdminForms/AdminForms.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AdminForms.css';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport TimePicker from 'react-bootstrap-time-picker';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\nimport { Calendar } from 'primereact/calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminForm = ({\n  reason\n}) => {\n  _s();\n  const today = new Date();\n  const month = today.getMonth();\n  const year = today.getFullYear();\n  const prevMonth = month === 0 ? 11 : month - 1;\n  const prevYear = prevMonth === 11 ? year - 1 : year;\n  const nextMonth = month === 11 ? 0 : month + 1;\n  const nextYear = nextMonth === 0 ? year + 1 : year;\n  const minDate = new Date();\n  minDate.setMonth(prevMonth + 1);\n  minDate.setFullYear(prevYear);\n  const maxDate = new Date();\n  maxDate.setMonth(0);\n  maxDate.setFullYear(year - 60);\n  const [formData, setFormData] = useState({\n    minDate: maxDate,\n    maxDate: minDate,\n    existingroutes: [],\n    existingdrivers: [],\n    existingbuses: [],\n    existingagency: [],\n    stateid: '',\n    routeid: '',\n    driverid: '',\n    starttime: '',\n    endtime: '',\n    esttraveltime: '',\n    reservedseats: '',\n    busregnno: '',\n    busregnnoo: '',\n    agencyaddr: '',\n    agencyname: '',\n    capacity: 0,\n    ac: 0,\n    doj: '',\n    drivername: '',\n    driverphone: '',\n    driverage: '',\n    fare: 0\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const fetchOptions = () => {\n    fetch('http://localhost:3001/RouteId').then(res => res.json()).then(data => setFormData(prev => ({\n      ...prev,\n      existingroutes: JSON.parse(data)\n    }))).catch(console.error);\n    fetch('http://localhost:3001/BusRegnNo').then(res => res.json()).then(data => setFormData(prev => ({\n      ...prev,\n      existingbuses: JSON.parse(data)\n    }))).catch(console.error);\n    fetch('http://localhost:3001/Drivers').then(res => res.json()).then(data => setFormData(prev => ({\n      ...prev,\n      existingdrivers: JSON.parse(data)\n    }))).catch(console.error);\n    fetch('http://localhost:3001/Agencies').then(res => res.json()).then(data => setFormData(prev => ({\n      ...prev,\n      existingagency: data\n    }))).catch(console.error);\n  };\n  useEffect(() => {\n    fetchOptions();\n  }, []);\n  const handleSubmit = async type => {\n    let url = '';\n    let payload = {};\n    if (type === 'busSchedule') {\n      url = 'http://localhost:3001/busSchedule';\n      payload = {\n        routeid: formData.routeid,\n        driverid: formData.driverid,\n        starttime: formData.starttime,\n        endtime: formData.endtime,\n        busregnno: formData.busregnnoo,\n        esttraveltime: formData.esttraveltime,\n        reservedseats: formData.reservedseats,\n        fare: formData.fare\n      };\n    } else if (type === 'bus') {\n      url = 'http://localhost:3001/bus';\n      payload = {\n        busregnno: formData.busregnno,\n        agencyaddr: formData.agencyaddr,\n        agencyname: formData.agencyname,\n        capacity: formData.capacity,\n        ac: formData.ac\n      };\n    } else if (type === 'driver') {\n      url = 'http://localhost:3001/driver';\n      payload = {\n        driverid: formData.driverid,\n        drivername: formData.drivername,\n        driverphone: formData.driverphone,\n        age: formData.driverage,\n        date_of_join: formData.doj\n      };\n    }\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      const result = JSON.parse(data);\n      if (!result.error) {\n        alert('Record insertion done');\n      } else {\n        alert('Error inserting. Please follow all restrictions: ' + JSON.stringify(result.error));\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Ap bg-green pa3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminForm, \"ETsQuRvfe64SoHhWPgDhC+5g9hw=\");\n_c = AdminForm;\nexport default AdminForm;\nvar _c;\n$RefreshReg$(_c, \"AdminForm\");","map":{"version":3,"names":["React","useState","useEffect","Dropdown","TimePicker","InputTextarea","RadioGroup","RadioButton","Calendar","jsxDEV","_jsxDEV","AdminForm","reason","_s","today","Date","month","getMonth","year","getFullYear","prevMonth","prevYear","nextMonth","nextYear","minDate","setMonth","setFullYear","maxDate","formData","setFormData","existingroutes","existingdrivers","existingbuses","existingagency","stateid","routeid","driverid","starttime","endtime","esttraveltime","reservedseats","busregnno","busregnnoo","agencyaddr","agencyname","capacity","ac","doj","drivername","driverphone","driverage","fare","handleChange","e","name","value","target","prev","fetchOptions","fetch","then","res","json","data","JSON","parse","catch","console","error","handleSubmit","type","url","payload","age","date_of_join","response","method","headers","body","stringify","result","alert","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/madhushraya/Desktop/apps/vbtes/src/Components/AdminForms/AdminForms.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './AdminForms.css';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport TimePicker from 'react-bootstrap-time-picker';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\r\nimport { Calendar } from 'primereact/calendar';\r\n\r\nconst AdminForm = ({ reason }) => {\r\n  const today = new Date();\r\n  const month = today.getMonth();\r\n  const year = today.getFullYear();\r\n  const prevMonth = month === 0 ? 11 : month - 1;\r\n  const prevYear = prevMonth === 11 ? year - 1 : year;\r\n  const nextMonth = month === 11 ? 0 : month + 1;\r\n  const nextYear = nextMonth === 0 ? year + 1 : year;\r\n\r\n  const minDate = new Date();\r\n  minDate.setMonth(prevMonth + 1);\r\n  minDate.setFullYear(prevYear);\r\n\r\n  const maxDate = new Date();\r\n  maxDate.setMonth(0);\r\n  maxDate.setFullYear(year - 60);\r\n\r\n  const [formData, setFormData] = useState({\r\n    minDate: maxDate,\r\n    maxDate: minDate,\r\n    existingroutes: [],\r\n    existingdrivers: [],\r\n    existingbuses: [],\r\n    existingagency: [],\r\n    stateid: '',\r\n    routeid: '',\r\n    driverid: '',\r\n    starttime: '',\r\n    endtime: '',\r\n    esttraveltime: '',\r\n    reservedseats: '',\r\n    busregnno: '',\r\n    busregnnoo: '',\r\n    agencyaddr: '',\r\n    agencyname: '',\r\n    capacity: 0,\r\n    ac: 0,\r\n    doj: '',\r\n    drivername: '',\r\n    driverphone: '',\r\n    driverage: '',\r\n    fare: 0\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const fetchOptions = () => {\r\n    fetch('http://localhost:3001/RouteId')\r\n      .then(res => res.json())\r\n      .then(data => setFormData(prev => ({ ...prev, existingroutes: JSON.parse(data) })))\r\n      .catch(console.error);\r\n\r\n    fetch('http://localhost:3001/BusRegnNo')\r\n      .then(res => res.json())\r\n      .then(data => setFormData(prev => ({ ...prev, existingbuses: JSON.parse(data) })))\r\n      .catch(console.error);\r\n\r\n    fetch('http://localhost:3001/Drivers')\r\n      .then(res => res.json())\r\n      .then(data => setFormData(prev => ({ ...prev, existingdrivers: JSON.parse(data) })))\r\n      .catch(console.error);\r\n\r\n    fetch('http://localhost:3001/Agencies')\r\n      .then(res => res.json())\r\n      .then(data => setFormData(prev => ({ ...prev, existingagency: data })))\r\n      .catch(console.error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOptions();\r\n  }, []);\r\n\r\n  const handleSubmit = async (type) => {\r\n    let url = '';\r\n    let payload = {};\r\n\r\n    if (type === 'busSchedule') {\r\n      url = 'http://localhost:3001/busSchedule';\r\n      payload = {\r\n        routeid: formData.routeid,\r\n        driverid: formData.driverid,\r\n        starttime: formData.starttime,\r\n        endtime: formData.endtime,\r\n        busregnno: formData.busregnnoo,\r\n        esttraveltime: formData.esttraveltime,\r\n        reservedseats: formData.reservedseats,\r\n        fare: formData.fare\r\n      };\r\n    } else if (type === 'bus') {\r\n      url = 'http://localhost:3001/bus';\r\n      payload = {\r\n        busregnno: formData.busregnno,\r\n        agencyaddr: formData.agencyaddr,\r\n        agencyname: formData.agencyname,\r\n        capacity: formData.capacity,\r\n        ac: formData.ac\r\n      };\r\n    } else if (type === 'driver') {\r\n      url = 'http://localhost:3001/driver';\r\n      payload = {\r\n        driverid: formData.driverid,\r\n        drivername: formData.drivername,\r\n        driverphone: formData.driverphone,\r\n        age: formData.driverage,\r\n        date_of_join: formData.doj\r\n      };\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const data = await response.json();\r\n      const result = JSON.parse(data);\r\n      if (!result.error) {\r\n        alert('Record insertion done');\r\n      } else {\r\n        alert('Error inserting. Please follow all restrictions: ' + JSON.stringify(result.error));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Ap bg-green pa3\">\r\n      {/* Rendering logic remains the same as your current render() method */}\r\n      {/* You can now conditionally render form sections using formData and update handleSubmit('busSchedule') etc. */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}