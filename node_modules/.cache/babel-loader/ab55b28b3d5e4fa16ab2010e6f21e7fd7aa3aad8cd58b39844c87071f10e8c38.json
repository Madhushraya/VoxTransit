{"ast":null,"code":"var _jsxFileName = \"/Users/madhushraya/Desktop/apps/vbtes/src/Components/AdminForms/AdminForms.js\";\nimport React, { Component } from 'react';\nimport './AdminForms.css';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport TimePicker from 'react-bootstrap-time-picker';\nimport tachyons from 'tachyons';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { RadioGroup, RadioButton, ReversedRadioButton } from 'react-radio-buttons';\nimport { Calendar } from 'primereact/calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AdminForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state);\n      if (this.state.user === 'a' && this.state.pass === 'p') this.setState({\n        logged: true\n      });\n    };\n    this.handleSubmit1 = event => {\n      event.preventDefault();\n\n      // Use the selected values from dropdowns\n      const routeId = this.state.routeid;\n      const driverId = this.state.driverid;\n      const busRegnNo = this.state.busregnnoo;\n      console.log(\"Submitting Bus Schedule:\", {\n        routeid: routeId,\n        driverid: driverId,\n        busregnno: busRegnNo,\n        starttime: this.state.starttime,\n        endtime: this.state.endtime,\n        esttraveltime: this.state.esttraveltime,\n        reservedseats: this.state.reservedseats,\n        fare: this.state.fare\n      });\n      fetch('http://localhost:3001/busSchedule', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          routeid: routeId,\n          driverid: driverId,\n          starttime: this.state.starttime,\n          endtime: this.state.endtime,\n          busregnno: busRegnNo,\n          esttraveltime: this.state.esttraveltime,\n          reservedseats: this.state.reservedseats,\n          fare: this.state.fare\n        })\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          response: JSON.parse(data)\n        });\n      }).then(x => {\n        if (this.state.response.error === \"\") {\n          alert('Record insertion done');\n        } else alert(\"Error inserting. Please follow all restrictions:\" + JSON.stringify(this.state.response.error));\n      }).catch(err => console.error(\"Error submitting bus schedule:\", err));\n    };\n    this.handleSubmit2 = event => {\n      event.preventDefault();\n      console.log(\"Submitting Bus Details:\", {\n        busregnno: this.state.stateid + this.state.busregnno,\n        agencyaddr: this.state.agencyaddr,\n        agencyname: this.state.agencyname,\n        capacity: this.state.capacity,\n        ac: this.state.ac\n      });\n      fetch('http://localhost:3001/bus', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          busregnno: this.state.stateid + this.state.busregnno,\n          agencyaddr: this.state.agencyaddr,\n          agencyname: this.state.agencyname,\n          capacity: this.state.capacity,\n          ac: this.state.ac\n        })\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          response2: JSON.parse(data)\n        });\n      }).then(x => {\n        if (this.state.response2.error === '') {\n          alert('Record insertion done');\n        } else alert(\"Error inserting. Please follow all restrictions:\" + JSON.stringify(this.state.response2.error));\n      }).catch(err => console.error(\"Error submitting bus details:\", err));\n    };\n    this.handleSubmit3 = event => {\n      event.preventDefault();\n      console.log(\"Submitting Driver Info:\", {\n        driverid: this.state.driveid,\n        drivername: this.state.drivername,\n        driverphone: this.state.driverphone,\n        age: this.state.driverage,\n        date_of_join: this.state.doj\n      });\n      fetch('http://localhost:3001/driver', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          driverid: this.state.driveid,\n          drivername: this.state.drivername,\n          driverphone: this.state.driverphone,\n          age: this.state.driverage,\n          date_of_join: this.state.doj\n        })\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          response3: JSON.parse(data)\n        });\n      }).then(x => {\n        if (this.state.response3.error === '') {\n          alert('Record insertion done');\n        } else alert(\"Error inserting. Please follow all restrictions:\" + JSON.stringify(this.state.response3.error));\n      }).catch(err => console.error(\"Error submitting driver info:\", err));\n    };\n    this.handleClick1 = () => {\n      this.speak(\"Add a Bus Schedule to existing routes\");\n    };\n    this.handleClick2 = () => {\n      this.speak(\"Add new Bus Details\");\n    };\n    this.handleClick3 = () => {\n      this.speak(\"View Transaction Logs\");\n    };\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n    let today = new Date();\n    let month = today.getMonth();\n    let year = today.getFullYear();\n    let prevMonth = month === 0 ? 11 : month - 1;\n    let prevYear = prevMonth === 11 ? year - 1 : year;\n    let nextMonth = month === 11 ? 0 : month + 1;\n    let nextYear = nextMonth === 0 ? year + 1 : year;\n    let minDate = new Date();\n    minDate.setMonth(prevMonth + 1);\n    minDate.setFullYear(prevYear);\n    let maxDate = new Date();\n    maxDate.setMonth(0);\n    maxDate.setFullYear(year - 60);\n    this.state = {\n      minDate: maxDate,\n      maxDate: minDate,\n      // Arrays for dropdown options\n      existingRoutes: [],\n      // Will store option objects\n      existingDrivers: [],\n      // Will store option objects\n      existingBuses: [],\n      // Will store option objects\n      existingAgency: [],\n      // Will store option objects\n      // Selected values\n      selectedRoute: null,\n      selectedDriver: null,\n      selectedBus: null,\n      selectedAgency: null,\n      // Form fields\n      stateid: '',\n      routeid: '',\n      driverid: '',\n      starttime: '',\n      endtime: '',\n      esttraveltime: '',\n      reservedseats: '',\n      busregnno: '',\n      busregnnoo: '',\n      agencyaddr: '',\n      agencyname: '',\n      capacity: 0,\n      ac: 0,\n      doj: '',\n      drivername: '',\n      driverphone: '',\n      driverage: '',\n      fare: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    // Fetch routes and format properly\n    fetch('http://localhost:3001/RouteId').then(res => res.json()).then(data => {\n      // Debug the raw response\n      console.log(\"Raw RouteId data:\", data);\n      let routeData;\n      try {\n        // Try to parse if it's a string, or use as is if already an object\n        routeData = typeof data === 'string' ? JSON.parse(data) : data;\n        console.log(\"Parsed Routes:\", routeData);\n\n        // Make sure we're working with an array\n        if (!Array.isArray(routeData)) {\n          console.error(\"Routes data is not an array:\", routeData);\n          routeData = [];\n        }\n\n        // Create array of route options with proper format for dropdown\n        const routeOptions = routeData.map(route => ({\n          label: `Route ID: ${route}`,\n          value: route\n        }));\n        this.setState({\n          existingRoutes: routeOptions\n        });\n      } catch (e) {\n        console.error(\"Error processing routes data:\", e);\n      }\n    }).catch(err => {\n      console.error(\"Error fetching routes:\", err);\n    });\n\n    // Fetch buses and format properly\n    fetch('http://localhost:3001/BusRegnNo').then(res => res.json()).then(data => {\n      // Debug the raw response\n      console.log(\"Raw BusRegnNo data:\", data);\n      let busData;\n      try {\n        // Try to parse if it's a string, or use as is if already an object\n        busData = typeof data === 'string' ? JSON.parse(data) : data;\n        console.log(\"Parsed Buses:\", busData);\n\n        // Make sure we're working with an array\n        if (!Array.isArray(busData)) {\n          console.error(\"Bus data is not an array:\", busData);\n          busData = [];\n        }\n\n        // Create array of bus options with proper format for dropdown\n        const busOptions = busData.map(bus => ({\n          label: `Bus: ${bus}`,\n          value: bus\n        }));\n        this.setState({\n          existingBuses: busOptions\n        });\n      } catch (e) {\n        console.error(\"Error processing buses data:\", e);\n      }\n    }).catch(err => {\n      console.error(\"Error fetching buses:\", err);\n    });\n\n    // Fetch drivers and format properly\n    fetch('http://localhost:3001/Drivers').then(res => res.json()).then(data => {\n      // Debug the raw response\n      console.log(\"Raw Drivers data:\", data);\n      let driverData;\n      try {\n        // Try to parse if it's a string, or use as is if already an object\n        driverData = typeof data === 'string' ? JSON.parse(data) : data;\n        console.log(\"Parsed Drivers:\", driverData);\n\n        // Make sure we're working with an array\n        if (!Array.isArray(driverData)) {\n          console.error(\"Driver data is not an array:\", driverData);\n          driverData = [];\n        }\n\n        // Create array of driver options with proper format for dropdown\n        const driverOptions = driverData.map(driver => ({\n          label: `Driver ID: ${driver}`,\n          value: driver\n        }));\n        this.setState({\n          existingDrivers: driverOptions\n        });\n      } catch (e) {\n        console.error(\"Error processing drivers data:\", e);\n      }\n    }).catch(err => {\n      console.error(\"Error fetching drivers:\", err);\n    });\n\n    // Fetch agencies\n    fetch('http://localhost:3001/Agencies').then(res => res.json()).then(data => {\n      // Debug the raw response\n      console.log(\"Raw Agencies data:\", data);\n      let agencyData;\n      try {\n        // Handle either string or object format\n        agencyData = typeof data === 'string' ? JSON.parse(data) : data;\n        console.log(\"Parsed Agencies:\", agencyData);\n\n        // Make sure we're working with an array\n        if (!Array.isArray(agencyData)) {\n          console.error(\"Agency data is not an array:\", agencyData);\n          agencyData = [];\n        }\n\n        // Format agencies for dropdown\n        const agencyOptions = agencyData.map(agency => ({\n          label: agency,\n          value: agency\n        }));\n        this.setState({\n          existingAgency: agencyOptions\n        });\n      } catch (e) {\n        console.error(\"Error processing agencies data:\", e);\n      }\n    }).catch(err => console.error(\"Error fetching agencies:\", err));\n  }\n  render() {\n    const options = [\"TN\", \"KL\", \"KA\", \"TS\", \"AP\"];\n    const optionsage = [];\n    for (var i = 30; i <= 60; i++) optionsage.push(i);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Ap bg-green pa3\",\n      children: this.props.reason === \"busschedule\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formwarpx pa2 ma2 shadow-2 center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gold pa3 ma2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bg-gold\",\n            children: \"Add Bus Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: this.state.existingRoutes,\n            onChange: e => {\n              console.log(\"Selected Route:\", e);\n              this.setState({\n                routeid: e.value\n              });\n            },\n            value: this.state.routeid ? {\n              label: `Route ID: ${this.state.routeid}`,\n              value: this.state.routeid\n            } : null,\n            placeholder: \"Select Route ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: this.state.existingDrivers,\n            onChange: e => {\n              console.log(\"Selected Driver:\", e);\n              this.setState({\n                driverid: e.value\n              });\n            },\n            value: this.state.driverid ? {\n              label: `Driver ID: ${this.state.driverid}`,\n              value: this.state.driverid\n            } : null,\n            placeholder: \"Select Driver ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: this.state.existingBuses,\n            onChange: e => {\n              console.log(\"Selected Bus:\", e);\n              this.setState({\n                busregnnoo: e.value\n              });\n            },\n            value: this.state.busregnnoo ? {\n              label: `Bus: ${this.state.busregnnoo}`,\n              value: this.state.busregnnoo\n            } : null,\n            placeholder: \"Select Bus Registration Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Subheads\",\n            children: \"Enter Journey Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n            style: {\n              width: \"200px\",\n              margin: \"0 auto\"\n            },\n            name: \"starttime\",\n            onChange: e => {\n              this.setState({\n                starttime: e\n              }, () => console.log(this.state));\n            },\n            start: \"0:00\",\n            end: \"24:00\",\n            step: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Subheads\",\n            children: \"Enter Journey Fare:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"uid\",\n            autoComplete: \"off\",\n            pattern: \"^([1-9][0-9]{0,3}|10000)$\",\n            className: \"Boxesx\",\n            type: \"text\",\n            onChange: this.handleChange,\n            required: true,\n            name: \"fare\",\n            placeholder: \"Fare\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Subheads\",\n            children: \"Estimated Travel Time(in hrs.):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"uid\",\n            autoComplete: \"off\",\n            pattern: \"^(1[0-5]|[1-9])$\",\n            className: \"Boxesx\",\n            type: \"text\",\n            onChange: this.handleChange,\n            required: true,\n            name: \"esttraveltime\",\n            placeholder: \"Estimated Travel Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FormGroup\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Subheads\",\n              children: \"Reserved Seats:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"uid\",\n              autoComplete: \"off\",\n              pattern: \"^(4[0]|3[0-9]|2[0-9]|1[0-9]|[0-9])$\",\n              className: \"Boxesx\",\n              type: \"text\",\n              onChange: this.handleChange,\n              required: true,\n              name: \"reservedseats\",\n              placeholder: \"Reserved Seats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn-lg btn btn-dark xysa\",\n            type: \"button\",\n            value: \"Submit\",\n            onClick: this.handleSubmit1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }, this) : this.props.reason === \"buses\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formwarpx pa2 ma2 shadow-2 center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gold pa3 ma2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bg-gold\",\n            children: \"Add New Bus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Subheadss\",\n          children: \"Enter Bus Regn No.:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"40px\",\n            width: \"60px\",\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n            options: options.map(option => ({\n              label: option,\n              value: option\n            })),\n            onChange: e => {\n              this.setState({\n                stateid: e.value\n              });\n            },\n            value: this.state.stateid ? {\n              label: this.state.stateid,\n              value: this.state.stateid\n            } : null,\n            placeholder: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FormGroups\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"uid\",\n              style: {\n                height: \"40px\"\n              },\n              autoComplete: \"off\",\n              pattern: \"\\\\d{8}\",\n              className: \"Boxesx\",\n              type: \"text\",\n              required: true,\n              onChange: this.handleChange,\n              name: \"busregnno\",\n              placeholder: \"Bus Registration Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Subheads\",\n            children: \"Enter Agency Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: this.state.existingAgency,\n            onChange: e => this.setState({\n              agencyname: e.value\n            }),\n            value: this.state.agencyname ? {\n              label: this.state.agencyname,\n              value: this.state.agencyname\n            } : null,\n            placeholder: \"Select an agency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Subheads\",\n            children: \"Total Capacity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"uid\",\n            autoComplete: \"off\",\n            pattern: \"^(4[0]|3[0-9]|2[0-9]|1[0-9]|[0-9])$\",\n            className: \"Boxesx\",\n            type: \"text\",\n            onChange: this.handleChange,\n            required: true,\n            name: \"capacity\",\n            placeholder: \"Total Capacity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Subheads\",\n            children: \"AC Available(Yes/No)?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            name: \"ac\",\n            style: {\n              color: \"#c71c1c\",\n              background: \"#ffffff\",\n              margin: \"0 auto\",\n              width: \"150px\",\n              display: \"flex\"\n            },\n            horizontal: true,\n            children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n              iconSize: 25,\n              iconInnerSize: 12,\n              rootColor: \"#00ff00\",\n              pointColor: \"#00ff00\",\n              value: \"yes\",\n              onClick: e => {\n                this.setState({\n                  ac: 1\n                });\n              },\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n              iconSize: 25,\n              iconInnerSize: 12,\n              rootColor: \"#c71c1c\",\n              pointColor: \"#c71c1c\",\n              value: \"no\",\n              onClick: e => {\n                this.setState({\n                  ac: 0\n                });\n              },\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn-lg btn btn-dark xysa\",\n          type: \"submit\",\n          value: \"Submit\",\n          onClick: this.handleSubmit2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 17\n      }, this) : this.props.reason === \"logs\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Subheads\",\n            children: \"Total Costs Earned\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            className: \"Boxes\",\n            type: \"text\",\n            onChange: this.handleChange,\n            required: true,\n            name: \"COST\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 19\n      }, this) : this.props.reason === \"driverinfo\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formwarpx pa2 ma2 shadow-2 center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gold pa3 ma2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bg-gold\",\n            children: \"Add New Driver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Subheads\",\n            children: \"Enter Driver Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: \"300px\",\n              height: \"30px\"\n            },\n            autoComplete: \"off\",\n            className: \"Boxesx\",\n            type: \"text\",\n            onChange: this.handleChange,\n            required: true,\n            name: \"drivername\",\n            placeholder: \"Driver Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Subheads\",\n            children: \"Enter Driver Age:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: optionsage.map(age => ({\n              label: `AGE: ${age}`,\n              value: age\n            })),\n            onChange: e => {\n              this.setState({\n                driverage: e.value\n              });\n            },\n            value: this.state.driverage ? {\n              label: `AGE: ${this.state.driverage}`,\n              value: this.state.driverage\n            } : null,\n            placeholder: \"Select Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Subheads\",\n            children: \"Enter Date of Joining:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n            dateFormat: \"dd/mm/yy\",\n            value: this.state.doj,\n            minDate: this.state.minDate,\n            maxDate: this.state.maxDate,\n            onChange: e => this.setState({\n              doj: e.value\n            }, () => console.log(this.state)),\n            showIcon: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Subheads\",\n            children: \"Enter Driver Phone no.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: \"300px\",\n              height: \"30px\"\n            },\n            autoComplete: \"off\",\n            className: \"Boxesx\",\n            id: \"uid\",\n            pattern: \"\\\\d{10}\",\n            type: \"text\",\n            onChange: this.handleChange,\n            required: true,\n            name: \"driverphone\",\n            placeholder: \"Driver Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn-lg btn btn-dark\",\n          type: \"submit\",\n          value: \"Submit\",\n          onClick: this.handleSubmit3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"ERROR 404\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AdminForm;","map":{"version":3,"names":["React","Component","Dropdown","TimePicker","tachyons","InputTextarea","RadioGroup","RadioButton","ReversedRadioButton","Calendar","jsxDEV","_jsxDEV","AdminForm","constructor","props","handleSubmit","event","preventDefault","console","log","state","user","pass","setState","logged","handleSubmit1","routeId","routeid","driverId","driverid","busRegnNo","busregnnoo","busregnno","starttime","endtime","esttraveltime","reservedseats","fare","fetch","method","headers","body","JSON","stringify","then","res","json","data","response","parse","x","error","alert","catch","err","handleSubmit2","stateid","agencyaddr","agencyname","capacity","ac","response2","handleSubmit3","driveid","drivername","driverphone","age","driverage","date_of_join","doj","response3","handleClick1","speak","handleClick2","handleClick3","handleChange","name","value","target","today","Date","month","getMonth","year","getFullYear","prevMonth","prevYear","nextMonth","nextYear","minDate","setMonth","setFullYear","maxDate","existingRoutes","existingDrivers","existingBuses","existingAgency","selectedRoute","selectedDriver","selectedBus","selectedAgency","bind","componentDidMount","routeData","Array","isArray","routeOptions","map","route","label","e","busData","busOptions","bus","driverData","driverOptions","driver","agencyData","agencyOptions","agency","render","options","optionsage","i","push","className","children","reason","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","style","width","margin","start","end","step","id","autoComplete","pattern","type","required","onClick","marginLeft","display","option","height","color","background","horizontal","iconSize","iconInnerSize","rootColor","pointColor","disabled","dateFormat","showIcon"],"sources":["/Users/madhushraya/Desktop/apps/vbtes/src/Components/AdminForms/AdminForms.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './AdminForms.css';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport TimePicker from 'react-bootstrap-time-picker';\r\nimport tachyons from 'tachyons';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { RadioGroup, RadioButton, ReversedRadioButton } from 'react-radio-buttons';\r\nimport { Calendar } from 'primereact/calendar';\r\n\r\nclass AdminForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let today = new Date();\r\n    let month = today.getMonth();\r\n    let year = today.getFullYear();\r\n    let prevMonth = month === 0 ? 11 : month - 1;\r\n    let prevYear = prevMonth === 11 ? year - 1 : year;\r\n    let nextMonth = month === 11 ? 0 : month + 1;\r\n    let nextYear = nextMonth === 0 ? year + 1 : year;\r\n\r\n    let minDate = new Date();\r\n    minDate.setMonth(prevMonth + 1);\r\n    minDate.setFullYear(prevYear);\r\n\r\n    let maxDate = new Date();\r\n    maxDate.setMonth(0);\r\n    maxDate.setFullYear(year - 60);\r\n\r\n    this.state = {\r\n      minDate: maxDate,\r\n      maxDate: minDate,\r\n      // Arrays for dropdown options\r\n      existingRoutes: [], // Will store option objects\r\n      existingDrivers: [], // Will store option objects\r\n      existingBuses: [], // Will store option objects\r\n      existingAgency: [], // Will store option objects\r\n      // Selected values\r\n      selectedRoute: null,\r\n      selectedDriver: null,\r\n      selectedBus: null,\r\n      selectedAgency: null,\r\n      // Form fields\r\n      stateid: '',\r\n      routeid: '',\r\n      driverid: '',\r\n      starttime: '',\r\n      endtime: '',\r\n      esttraveltime: '',\r\n      reservedseats: '',\r\n      busregnno: '',\r\n      busregnnoo: '',\r\n      agencyaddr: '',\r\n      agencyname: '',\r\n      capacity: 0,\r\n      ac: 0,\r\n      doj: '',\r\n      drivername: '',\r\n      driverphone: '',\r\n      driverage: '',\r\n      fare: 0\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    if (this.state.user === 'a' && this.state.pass === 'p')\r\n      this.setState({ logged: true });\r\n  }\r\n\r\n  handleSubmit1 = (event) => {\r\n    event.preventDefault();\r\n    \r\n    // Use the selected values from dropdowns\r\n    const routeId = this.state.routeid;\r\n    const driverId = this.state.driverid;\r\n    const busRegnNo = this.state.busregnnoo;\r\n    \r\n    console.log(\"Submitting Bus Schedule:\", {\r\n      routeid: routeId,\r\n      driverid: driverId,\r\n      busregnno: busRegnNo,\r\n      starttime: this.state.starttime,\r\n      endtime: this.state.endtime,\r\n      esttraveltime: this.state.esttraveltime,\r\n      reservedseats: this.state.reservedseats,\r\n      fare: this.state.fare\r\n    });\r\n\r\n    fetch('http://localhost:3001/busSchedule', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        routeid: routeId,\r\n        driverid: driverId,\r\n        starttime: this.state.starttime,\r\n        endtime: this.state.endtime,\r\n        busregnno: busRegnNo,\r\n        esttraveltime: this.state.esttraveltime,\r\n        reservedseats: this.state.reservedseats,\r\n        fare: this.state.fare\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => { this.setState({ response: JSON.parse(data) }) })\r\n      .then(x => {\r\n        if (this.state.response.error === \"\") {\r\n          alert('Record insertion done');\r\n        }\r\n        else\r\n          alert(\"Error inserting. Please follow all restrictions:\" + JSON.stringify(this.state.response.error));\r\n      })\r\n      .catch(err => console.error(\"Error submitting bus schedule:\", err));\r\n  }\r\n\r\n  handleSubmit2 = (event) => {\r\n    event.preventDefault();\r\n    \r\n    console.log(\"Submitting Bus Details:\", {\r\n      busregnno: this.state.stateid + this.state.busregnno,\r\n      agencyaddr: this.state.agencyaddr,\r\n      agencyname: this.state.agencyname,\r\n      capacity: this.state.capacity,\r\n      ac: this.state.ac\r\n    });\r\n\r\n    fetch('http://localhost:3001/bus', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        busregnno: this.state.stateid + this.state.busregnno,\r\n        agencyaddr: this.state.agencyaddr,\r\n        agencyname: this.state.agencyname,\r\n        capacity: this.state.capacity,\r\n        ac: this.state.ac\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => { this.setState({ response2: JSON.parse(data) }) })\r\n      .then(x => {\r\n        if (this.state.response2.error === '') {\r\n          alert('Record insertion done');\r\n        }\r\n        else\r\n          alert(\"Error inserting. Please follow all restrictions:\" + JSON.stringify(this.state.response2.error));\r\n      })\r\n      .catch(err => console.error(\"Error submitting bus details:\", err));\r\n  }\r\n\r\n  handleSubmit3 = (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(\"Submitting Driver Info:\", {\r\n      driverid: this.state.driveid,\r\n      drivername: this.state.drivername,\r\n      driverphone: this.state.driverphone,\r\n      age: this.state.driverage,\r\n      date_of_join: this.state.doj\r\n    });\r\n\r\n    fetch('http://localhost:3001/driver', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        driverid: this.state.driveid,\r\n        drivername: this.state.drivername,\r\n        driverphone: this.state.driverphone,\r\n        age: this.state.driverage,\r\n        date_of_join: this.state.doj\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => { this.setState({ response3: JSON.parse(data) }) })\r\n      .then(x => {\r\n        if (this.state.response3.error === '') {\r\n          alert('Record insertion done');\r\n        }\r\n        else\r\n          alert(\"Error inserting. Please follow all restrictions:\" + JSON.stringify(this.state.response3.error));\r\n      })\r\n      .catch(err => console.error(\"Error submitting driver info:\", err));\r\n  }\r\n\r\n  handleClick1 = () => {\r\n    this.speak(\"Add a Bus Schedule to existing routes\");\r\n  }\r\n\r\n  handleClick2 = () => {\r\n    this.speak(\"Add new Bus Details\");\r\n  }\r\n\r\n  handleClick3 = () => {\r\n    this.speak(\"View Transaction Logs\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch routes and format properly\r\n    fetch('http://localhost:3001/RouteId')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // Debug the raw response\r\n        console.log(\"Raw RouteId data:\", data);\r\n        \r\n        let routeData;\r\n        try {\r\n          // Try to parse if it's a string, or use as is if already an object\r\n          routeData = typeof data === 'string' ? JSON.parse(data) : data;\r\n          console.log(\"Parsed Routes:\", routeData);\r\n          \r\n          // Make sure we're working with an array\r\n          if (!Array.isArray(routeData)) {\r\n            console.error(\"Routes data is not an array:\", routeData);\r\n            routeData = [];\r\n          }\r\n          \r\n          // Create array of route options with proper format for dropdown\r\n          const routeOptions = routeData.map(route => ({\r\n            label: `Route ID: ${route}`,\r\n            value: route\r\n          }));\r\n          this.setState({ existingRoutes: routeOptions });\r\n        } catch (e) {\r\n          console.error(\"Error processing routes data:\", e);\r\n        }\r\n      })\r\n      .catch((err) => { \r\n        console.error(\"Error fetching routes:\", err); \r\n      });\r\n\r\n    // Fetch buses and format properly\r\n    fetch('http://localhost:3001/BusRegnNo')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // Debug the raw response\r\n        console.log(\"Raw BusRegnNo data:\", data);\r\n        \r\n        let busData;\r\n        try {\r\n          // Try to parse if it's a string, or use as is if already an object\r\n          busData = typeof data === 'string' ? JSON.parse(data) : data;\r\n          console.log(\"Parsed Buses:\", busData);\r\n          \r\n          // Make sure we're working with an array\r\n          if (!Array.isArray(busData)) {\r\n            console.error(\"Bus data is not an array:\", busData);\r\n            busData = [];\r\n          }\r\n          \r\n          // Create array of bus options with proper format for dropdown\r\n          const busOptions = busData.map(bus => ({\r\n            label: `Bus: ${bus}`,\r\n            value: bus\r\n          }));\r\n          this.setState({ existingBuses: busOptions });\r\n        } catch (e) {\r\n          console.error(\"Error processing buses data:\", e);\r\n        }\r\n      })\r\n      .catch((err) => { \r\n        console.error(\"Error fetching buses:\", err); \r\n      });\r\n\r\n    // Fetch drivers and format properly\r\n    fetch('http://localhost:3001/Drivers')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // Debug the raw response\r\n        console.log(\"Raw Drivers data:\", data);\r\n        \r\n        let driverData;\r\n        try {\r\n          // Try to parse if it's a string, or use as is if already an object\r\n          driverData = typeof data === 'string' ? JSON.parse(data) : data;\r\n          console.log(\"Parsed Drivers:\", driverData);\r\n          \r\n          // Make sure we're working with an array\r\n          if (!Array.isArray(driverData)) {\r\n            console.error(\"Driver data is not an array:\", driverData);\r\n            driverData = [];\r\n          }\r\n          \r\n          // Create array of driver options with proper format for dropdown\r\n          const driverOptions = driverData.map(driver => ({\r\n            label: `Driver ID: ${driver}`,\r\n            value: driver\r\n          }));\r\n          this.setState({ existingDrivers: driverOptions });\r\n        } catch (e) {\r\n          console.error(\"Error processing drivers data:\", e);\r\n        }\r\n      })\r\n      .catch((err) => { \r\n        console.error(\"Error fetching drivers:\", err); \r\n      });\r\n\r\n    // Fetch agencies\r\n    fetch('http://localhost:3001/Agencies')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // Debug the raw response\r\n        console.log(\"Raw Agencies data:\", data);\r\n        \r\n        let agencyData;\r\n        try {\r\n          // Handle either string or object format\r\n          agencyData = typeof data === 'string' ? JSON.parse(data) : data;\r\n          console.log(\"Parsed Agencies:\", agencyData);\r\n          \r\n          // Make sure we're working with an array\r\n          if (!Array.isArray(agencyData)) {\r\n            console.error(\"Agency data is not an array:\", agencyData);\r\n            agencyData = [];\r\n          }\r\n          \r\n          // Format agencies for dropdown\r\n          const agencyOptions = agencyData.map(agency => ({\r\n            label: agency,\r\n            value: agency\r\n          }));\r\n          this.setState({ existingAgency: agencyOptions });\r\n        } catch (e) {\r\n          console.error(\"Error processing agencies data:\", e);\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"Error fetching agencies:\", err));\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  render() {\r\n    const options = [\"TN\", \"KL\", \"KA\", \"TS\", \"AP\"];\r\n    const optionsage = [];\r\n    for (var i = 30; i <= 60; i++)\r\n      optionsage.push(i);\r\n\r\n    return (\r\n      <div className=\"Ap bg-green pa3\">\r\n        {\r\n          (this.props.reason === \"busschedule\") ?\r\n            (\r\n              <div className='formwarpx pa2 ma2 shadow-2 center'>\r\n                <div className='bg-gold pa3 ma2'>\r\n                  <span className='bg-gold'>Add Bus Schedule</span>\r\n                </div>\r\n                \r\n                {/* Route Dropdown - Corrected format */}\r\n                <div className='FormGroup'>\r\n                  <Dropdown \r\n                    options={this.state.existingRoutes} \r\n                    onChange={(e) => {\r\n                      console.log(\"Selected Route:\", e);\r\n                      this.setState({routeid: e.value})\r\n                    }} \r\n                    value={this.state.routeid ? {label: `Route ID: ${this.state.routeid}`, value: this.state.routeid} : null} \r\n                    placeholder=\"Select Route ID\" \r\n                  />\r\n                </div>\r\n                \r\n                {/* Driver Dropdown - Corrected format */}\r\n                <div className='FormGroup'>\r\n                  <Dropdown \r\n                    options={this.state.existingDrivers} \r\n                    onChange={(e) => {\r\n                      console.log(\"Selected Driver:\", e);\r\n                      this.setState({driverid: e.value})\r\n                    }} \r\n                    value={this.state.driverid ? {label: `Driver ID: ${this.state.driverid}`, value: this.state.driverid} : null} \r\n                    placeholder=\"Select Driver ID\" \r\n                  />\r\n                </div>\r\n                \r\n                {/* Bus Dropdown - Corrected format */}\r\n                <div className='FormGroup'>\r\n                  <Dropdown \r\n                    options={this.state.existingBuses} \r\n                    onChange={(e) => {\r\n                      console.log(\"Selected Bus:\", e);\r\n                      this.setState({busregnnoo: e.value})\r\n                    }} \r\n                    value={this.state.busregnnoo ? {label: `Bus: ${this.state.busregnnoo}`, value: this.state.busregnnoo} : null} \r\n                    placeholder=\"Select Bus Registration Number\" \r\n                  />\r\n                </div>\r\n\r\n                <div className='FormGroup'>\r\n                  <span className='Subheads'>Enter Journey Start Time:</span>\r\n                  <TimePicker \r\n                    style={{width:\"200px\",margin:\"0 auto\"}} \r\n                    name='starttime' \r\n                    onChange={(e) => {this.setState({starttime: e}, () => console.log(this.state))}} \r\n                    start=\"0:00\" \r\n                    end=\"24:00\" \r\n                    step={30} \r\n                  />\r\n                </div>\r\n\r\n                <div className='FormGroup'>\r\n                  <span className='Subheads'>Enter Journey Fare:</span>\r\n                  <input \r\n                    id=\"uid\" \r\n                    autoComplete='off' \r\n                    pattern=\"^([1-9][0-9]{0,3}|10000)$\" \r\n                    className='Boxesx' \r\n                    type='text' \r\n                    onChange={this.handleChange} \r\n                    required \r\n                    name='fare' \r\n                    placeholder='Fare'\r\n                  />\r\n                </div>\r\n\r\n                <div className='FormGroup'>\r\n                  <span className='Subheads'>Estimated Travel Time(in hrs.):</span>\r\n                  <input \r\n                    id=\"uid\" \r\n                    autoComplete='off' \r\n                    pattern=\"^(1[0-5]|[1-9])$\" \r\n                    className='Boxesx' \r\n                    type='text' \r\n                    onChange={this.handleChange} \r\n                    required \r\n                    name='esttraveltime' \r\n                    placeholder='Estimated Travel Time'\r\n                  />\r\n\r\n                  <div className='FormGroup'>\r\n                    <span className='Subheads'>Reserved Seats:</span>\r\n                    <input \r\n                      id=\"uid\" \r\n                      autoComplete='off' \r\n                      pattern=\"^(4[0]|3[0-9]|2[0-9]|1[0-9]|[0-9])$\" \r\n                      className='Boxesx' \r\n                      type='text' \r\n                      onChange={this.handleChange} \r\n                      required \r\n                      name='reservedseats' \r\n                      placeholder='Reserved Seats'\r\n                    />\r\n                  </div>\r\n\r\n                  <input \r\n                    className=\"btn-lg btn btn-dark xysa\" \r\n                    type=\"button\" \r\n                    value=\"Submit\" \r\n                    onClick={this.handleSubmit1}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )\r\n            : (this.props.reason === \"buses\") ?\r\n              (\r\n                <div className='formwarpx pa2 ma2 shadow-2 center'>\r\n                  <div className='bg-gold pa3 ma2'>\r\n                    <span className='bg-gold'>Add New Bus</span>\r\n                  </div>\r\n\r\n                  <span className='Subheadss'>Enter Bus Regn No.:</span>\r\n                  <div style={{marginLeft:\"40px\",width:\"60px\",display:\"flex\"}}>\r\n                    <Dropdown   \r\n                      options={options.map(option => ({label: option, value: option}))} \r\n                      onChange={(e) => {this.setState({stateid: e.value})}} \r\n                      value={this.state.stateid ? {label: this.state.stateid, value: this.state.stateid} : null}\r\n                      placeholder=\"State\"\r\n                    />\r\n                    <div className='FormGroups'>\r\n                      <input \r\n                        id=\"uid\" \r\n                        style={{height:\"40px\"}} \r\n                        autoComplete='off' \r\n                        pattern=\"\\d{8}\" \r\n                        className='Boxesx' \r\n                        type='text' \r\n                        required \r\n                        onChange={this.handleChange} \r\n                        name='busregnno' \r\n                        placeholder='Bus Registration Number'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='FormGroup'>\r\n                    <span className='Subheads'>Enter Agency Name:</span><br/>\r\n                    <Dropdown \r\n                      options={this.state.existingAgency} \r\n                      onChange={(e) => this.setState({ agencyname: e.value })}  \r\n                      value={this.state.agencyname ? {label: this.state.agencyname, value: this.state.agencyname} : null}  \r\n                      placeholder=\"Select an agency\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='FormGroup'>\r\n                    <span className='Subheads'>Total Capacity:</span>\r\n                    <input \r\n                      id=\"uid\" \r\n                      autoComplete='off' \r\n                      pattern=\"^(4[0]|3[0-9]|2[0-9]|1[0-9]|[0-9])$\" \r\n                      className='Boxesx' \r\n                      type='text' \r\n                      onChange={this.handleChange} \r\n                      required \r\n                      name='capacity' \r\n                      placeholder='Total Capacity'\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='FormGroup'>\r\n                    <span className='Subheads'>AC Available(Yes/No)?</span>\r\n                    <RadioGroup \r\n                      name='ac' \r\n                      style={{color:\"#c71c1c\",background:\"#ffffff\",margin:\"0 auto\",width:\"150px\",display:\"flex\"}} \r\n                      horizontal\r\n                    >\r\n                      <RadioButton \r\n                        iconSize={25} \r\n                        iconInnerSize={12} \r\n                        rootColor=\"#00ff00\" \r\n                        pointColor=\"#00ff00\" \r\n                        value=\"yes\" \r\n                        onClick={(e) => {this.setState({ac: 1})}}\r\n                      >\r\n                        Yes\r\n                      </RadioButton>\r\n                      <RadioButton \r\n                        iconSize={25} \r\n                        iconInnerSize={12} \r\n                        rootColor=\"#c71c1c\" \r\n                        pointColor=\"#c71c1c\" \r\n                        value=\"no\" \r\n                        onClick={(e) => {this.setState({ac: 0})}}\r\n                      >\r\n                        No\r\n                      </RadioButton>\r\n                    </RadioGroup>\r\n                  </div>\r\n                  <input \r\n                    className=\"btn-lg btn btn-dark xysa\" \r\n                    type=\"submit\" \r\n                    value=\"Submit\" \r\n                    onClick={this.handleSubmit2} \r\n                  />\r\n                </div>\r\n              ) :\r\n              (this.props.reason === \"logs\") ?\r\n                (\r\n                  <div>\r\n                    <div className='FormGroup'>\r\n                      <span className='Subheads'>Total Costs Earned</span>\r\n                      <input \r\n                        autoComplete='off' \r\n                        className='Boxes' \r\n                        type='text' \r\n                        onChange={this.handleChange} \r\n                        required \r\n                        name='COST' \r\n                        disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ) :\r\n                (this.props.reason === \"driverinfo\") ?\r\n                  (\r\n                    <div className='formwarpx pa2 ma2 shadow-2 center'>\r\n                      <div className='bg-gold pa3 ma2'>\r\n                        <span className='bg-gold'>Add New Driver</span>\r\n                      </div>\r\n\r\n                      <div className='FormGroup'>\r\n                        <span className='Subheads'>Enter Driver Name:</span>\r\n                        <input \r\n                          style={{width:\"300px\",height:\"30px\"}} \r\n                          autoComplete='off' \r\n                          className='Boxesx' \r\n                          type='text' \r\n                          onChange={this.handleChange} \r\n                          required \r\n                          name='drivername' \r\n                          placeholder='Driver Name'\r\n                        />\r\n                      </div>\r\n\r\n                      <div className='FormGroup'>\r\n                        <span className='Subheads'>Enter Driver Age:</span>\r\n                        <Dropdown   \r\n                          options={optionsage.map(age => ({label: `AGE: ${age}`, value: age}))} \r\n                          onChange={(e) => {this.setState({driverage: e.value})}} \r\n                          value={this.state.driverage ? {label: `AGE: ${this.state.driverage}`, value: this.state.driverage} : null}\r\n                          placeholder=\"Select Age\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className='FormGroup'>\r\n                        <span className='Subheads'>Enter Date of Joining:</span>\r\n                        <Calendar \r\n                          dateFormat=\"dd/mm/yy\" \r\n                          value={this.state.doj} \r\n                          minDate={this.state.minDate}\r\n                          maxDate={this.state.maxDate}\r\n                          onChange={(e) => this.setState({doj: e.value}, () => console.log(this.state))} \r\n                          showIcon={true} \r\n                        />\r\n                      </div>\r\n\r\n                      <div className='FormGroup'>\r\n                        <span className='Subheads'>Enter Driver Phone no.</span>\r\n                        <input \r\n                          style={{width:\"300px\",height:\"30px\"}} \r\n                          autoComplete='off' \r\n                          className='Boxesx' \r\n                          id=\"uid\" \r\n                          pattern=\"\\d{10}\" \r\n                          type='text' \r\n                          onChange={this.handleChange} \r\n                          required \r\n                          name='driverphone' \r\n                          placeholder='Driver Phone'\r\n                        />\r\n                      </div>\r\n                      <input \r\n                        className=\"btn-lg btn btn-dark\" \r\n                        type=\"submit\" \r\n                        value=\"Submit\" \r\n                        onClick={this.handleSubmit3}\r\n                      />\r\n                    </div>\r\n                  ) :\r\n                  <p>ERROR 404</p>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}